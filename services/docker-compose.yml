version: '3.8'

services:
  # Redpanda (Kafka-compatible streaming platform) - Official Configuration
  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:latest
    container_name: qicore-redpanda
    command:
      - redpanda
      - start
      - --kafka-addr
      - internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr
      - internal://redpanda:9092,external://localhost:19092
      - --pandaproxy-addr
      - internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr
      - internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr
      - internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr
      - redpanda:33145
      - --advertise-rpc-addr
      - redpanda:33145
      - --mode
      - dev-container
      - --smp
      - '1'
      - --default-log-level=info
    ports:
      - "18081:18081"
      - "18082:18082"
      - "19092:19092"
      - "19644:9644"
    volumes:
      - redpanda_data:/var/lib/redpanda/data
    networks:
      - qicore-network
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster health | grep -E 'Healthy|true'"]
      interval: 15s
      timeout: 3s
      retries: 5
      start_period: 5s

  # TimescaleDB (Time-series database for real-time data)
  timescaledb:
    image: timescale/timescaledb:latest-pg16
    container_name: qicore-timescaledb
    environment:
      POSTGRES_DB: cryptodb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
      - ./database/init-timescale-generated.sql:/docker-entrypoint-initdb.d/01-init-timescale.sql
    networks:
      - qicore-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d cryptodb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (Caching and real-time data)
  redis:
    image: redis:7-alpine
    container_name: qicore-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - qicore-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redpanda Console (Web UI for Kafka/Redpanda)
  console:
    image: docker.redpanda.com/redpandadata/console:latest
    container_name: qicore-console
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      KAFKA_BROKERS: redpanda:9092
      KAFKA_SCHEMAREGISTRY_ENABLED: true
      KAFKA_SCHEMAREGISTRY_URLS: http://redpanda:8081
    ports:
      - "8080:8080"
    volumes:
      - ./config/redpanda-console.yml:/tmp/config.yml:ro
    networks:
      - qicore-network
    depends_on:
      redpanda:
        condition: service_healthy

volumes:
  redpanda_data:
  timescaledb_data:
  redis_data:

networks:
  qicore-network:
    driver: bridge