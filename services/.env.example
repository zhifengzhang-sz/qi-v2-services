# QiCore Crypto Data Platform - Environment Configuration
# Copy this file to .env and configure your settings

# ===================
# AI Model Configuration
# ===================

# AI Provider: ollama, anthropic, openai
AI_PROVIDER=ollama

# Model name (depends on provider)
# Ollama examples: qwen3:0.6b, qwen3:8b, qwen3:14b, llama3.1:8b
# Anthropic examples: claude-3-haiku-20240307, claude-3-sonnet-20240229
# OpenAI examples: gpt-4o-mini, gpt-4o
AI_MODEL=qwen3:0.6b

# Base URL for Ollama (ignored for cloud providers)
AI_BASE_URL=http://localhost:11434

# API Keys for cloud providers (optional for Ollama)
# AI_API_KEY=your_anthropic_or_openai_key_here

# ===================
# Data Source Configuration
# ===================

# CryptoCompare API Key (optional but recommended for higher rate limits)
# Get your free key at: https://min-api.cryptocompare.com/
# CRYPTOCOMPARE_API_KEY=your_cryptocompare_api_key_here

# TwelveData API Key (for additional data sources)
# TWELVEDATA_API_KEY=your_twelvedata_api_key_here

# ===================
# Database Configuration
# ===================

# TimescaleDB (Time-series database for real-time data)
TIMESCALE_HOST=localhost
TIMESCALE_PORT=5432
TIMESCALE_DATABASE=cryptodb
TIMESCALE_USERNAME=postgres
TIMESCALE_PASSWORD=password

# ClickHouse (Analytics database for historical analysis)
CLICKHOUSE_HOST=localhost
CLICKHOUSE_PORT=8123
CLICKHOUSE_DATABASE=crypto_analytics
CLICKHOUSE_USERNAME=default
CLICKHOUSE_PASSWORD=

# Redis (Caching and real-time data)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=

# ===================
# Streaming Configuration
# ===================

# Redpanda/Kafka Configuration
REDPANDA_BROKERS=localhost:19092
REDPANDA_TOPIC_MARKET_DATA=crypto.market.data
REDPANDA_TOPIC_SIGNALS=crypto.signals
REDPANDA_TOPIC_ANALYSIS=crypto.analysis

# KafkaJS Settings (suppress warnings for production)
KAFKAJS_NO_PARTITIONER_WARNING=1

# ===================
# Application Configuration
# ===================

# Environment: development, staging, production
NODE_ENV=development

# Logging level: debug, info, warn, error
LOG_LEVEL=info

# Server configuration (for future API endpoints)
PORT=3000
HOST=localhost

# ===================
# Security Configuration
# ===================

# JWT Secret (for future authentication)
# JWT_SECRET=your_secure_random_string_here

# CORS Origins (comma-separated)
# CORS_ORIGINS=http://localhost:3000,http://localhost:8080

# ===================
# Monitoring & Observability
# ===================

# Enable metrics collection
ENABLE_METRICS=true

# Health check endpoint
HEALTH_CHECK_ENDPOINT=/health

# Prometheus metrics endpoint
METRICS_ENDPOINT=/metrics

# ===================
# Development Configuration
# ===================

# Enable debug mode for additional logging
DEBUG=false

# Mock mode (skip real API calls for testing)
MOCK_MODE=false

# Simulate market data (for testing without real feeds)
SIMULATE_DATA=false